#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π StarBot
"""

import sqlite3
from db import init_db, add_stars, get_user_settings, create_star_check, claim_star_check, get_user_checks

def test_database_and_checks():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —á–µ–∫–æ–≤"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ StarBot —Ñ—É–Ω–∫—Ü–∏–π...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_db()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    test_user_id = 123456789
    test_recipient_id = 987654321
    
    # 1. –î–æ–±–∞–≤–ª—è–µ–º –∑–≤–µ–∑–¥—ã —Ç–µ—Å—Ç–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    total_stars = add_stars(test_user_id, 500)
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ 500 –∑–≤–µ–∑–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {test_user_id}, –≤—Å–µ–≥–æ: {total_stars}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    settings = get_user_settings(test_user_id)
    print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {settings}")
    
    # 3. –°–æ–∑–¥–∞–µ–º —á–µ–∫
    check_id, result = create_star_check(test_user_id, 100, message="–¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥")
    if check_id:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —á–µ–∫ ID: {check_id} –Ω–∞ 100 –∑–≤–µ–∑–¥")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–∞
        settings_after = get_user_settings(test_user_id)
        print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–∞: {settings_after['stars']} –∑–≤–µ–∑–¥")
        
        # 5. –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —á–µ–∫ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        success, check_data = claim_star_check(check_id, test_recipient_id)
        if success:
            print(f"‚úÖ –ß–µ–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {test_recipient_id}")
            print(f"   –ü–æ–ª—É—á–µ–Ω–æ: {check_data['amount']} –∑–≤–µ–∑–¥")
            
            # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
            add_stars(test_recipient_id, 0)  # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –µ—Å–ª–∏ –Ω–µ—Ç
            recipient_settings = get_user_settings(test_recipient_id)
            print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {recipient_settings['stars']} –∑–≤–µ–∑–¥")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —á–µ–∫–∞: {check_data}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–∫–∞: {result}")
    
    # 7. –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–µ–∫–æ–≤
    sent_checks, received_checks = get_user_checks(test_user_id)
    print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —á–µ–∫–æ–≤: {len(sent_checks)}")
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–Ω—ã—Ö —á–µ–∫–æ–≤: {len(received_checks)}")
    
    # 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('users.db')
    cursor = conn.cursor()
    
    cursor.execute("SELECT COUNT(*) FROM star_checks")
    checks_count = cursor.fetchone()[0]
    print(f"‚úÖ –í—Å–µ–≥–æ —á–µ–∫–æ–≤ –≤ –±–∞–∑–µ: {checks_count}")
    
    cursor.execute("SELECT COUNT(*) FROM users WHERE stars > 0")
    users_with_stars = cursor.fetchone()[0] 
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ –∑–≤–µ–∑–¥–∞–º–∏: {users_with_stars}")
    
    conn.close()
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("üí° –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —á–µ–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

if __name__ == "__main__":
    test_database_and_checks() 